version: "3.0"

expectations:
  population_size: 1000

actions:
  
  # get_patient_count:
  #   run: python:latest python analysis/get_patients_counts.py
  #   needs: [join_ethnicity]
  #   outputs:
  #     moderately_sensitive:
  #       text: output/patient_count.json
      
  # get_practice_count:
  #   run: python:latest python analysis/get_practice_count.py
  #   needs: [join_ethnicity]
  #   outputs:
  #     moderately_sensitive:
  #       text: output/practice_count.json

  # generate_measures:
  #   run: cohortextractor:latest generate_measures --study-definition study_definition --output-dir=output
  #   needs: [join_ethnicity]
  #   outputs:
  #     moderately_sensitive:
  #       measure_csv: output/measure_*_rate.csv

  # generate_measures_cleaned:
  #   run: python:latest python analysis/clean_measures.py
  #   needs: [generate_measures]
  #   outputs:
  #     moderately_sensitive:
  #       measure_csv: output/measure_cleaned_*.csv


  # generate_notebook:
  #   run: jupyter:latest jupyter nbconvert /workspace/analysis/sentinel_measures.ipynb --execute --to html --template basic --output-dir=/workspace/output --ExecutePreprocessor.timeout=86400 --no-input
  #   needs:
  #     [
  #       generate_measures,
  #       generate_measures_cleaned,
  #       get_practice_count,
  #       get_patient_count,
  #     ]
  #   outputs:
  #     moderately_sensitive:
  #       notebook: output/sentinel_measures.html
  #       subplots: output/sentinel_measures_subplots.png
  #       code_tables: output/code_table_*.csv
  #       events_count: output/event_count.json

  # generate_notebook_updating:
  #     run: jupyter:latest jupyter nbconvert /workspace/analysis/sentinel_measures_updating.ipynb --execute --to html --template basic --output-dir=/workspace/output --ExecutePreprocessor.timeout=86400 --no-input
  #     needs:
  #       [
  #         generate_measures,
  #         generate_measures_cleaned,
  #         get_practice_count,
  #         get_patient_count,
  #       ]
  #     outputs:
  #       moderately_sensitive:
  #         notebook: output/sentinel_measures_updating.html
  #         code_tables: output/code_table*.csv
  #         practices: output/num_practices_included*.csv

  # run_tests:
  #   run: python:latest python -m pytest --junit-xml=output/pytest.xml --verbose
  #   outputs:
  #     moderately_sensitive:
  #       log: output/pytest.xml

  measures_ehrql:
    run: ehrql:v0 generate-measures analysis/dataset_definition.py --output output/measures.csv
    outputs:
      moderately_sensitive:
        measure_csv: output/measures.csv